                case MessageFunctions.PIDAsservissementConstant:


                    if (msgPayload[0] == 0) //Lineraire
                    {
                        var tabPIDC = BitConverter.ToSingle(msgPayload, 1);
                        robot.pidLin.Kp = tabPIDC;
                        tabPIDC = BitConverter.ToSingle(msgPayload, 5);
                        robot.pidLin.Ki = tabPIDC;
                        tabPIDC = BitConverter.ToSingle(msgPayload, 9);
                        robot.pidLin.Kd = tabPIDC;
                        tabPIDC = BitConverter.ToSingle(msgPayload, 13);
                        robot.pidLin.erreurProportionelleMax = tabPIDC;
                        tabPIDC = BitConverter.ToSingle(msgPayload, 17);
                        robot.pidLin.erreurIntegraleMax = tabPIDC;
                        tabPIDC = BitConverter.ToSingle(msgPayload, 21);
                        robot.pidLin.erreurDeriveeMax = tabPIDC;

                    }
                    else if (msgPayload[0] == 1) // Angulaire
                    {
                        var tabPID = BitConverter.ToSingle(msgPayload, 1);
                        robot.pidAng.Kp = tabPID;
                        tabPID = BitConverter.ToSingle(msgPayload, 5);
                        robot.pidAng.Ki = tabPID;
                        tabPID = BitConverter.ToSingle(msgPayload, 9);
                        robot.pidAng.Kd = tabPID;
                        tabPID = BitConverter.ToSingle(msgPayload, 13);
                        robot.pidAng.erreurProportionelleMax = tabPID;
                        tabPID = BitConverter.ToSingle(msgPayload, 17);
                        robot.pidAng.erreurIntegraleMax = tabPID;
                        tabPID = BitConverter.ToSingle(msgPayload, 21);
                        robot.pidAng.erreurDeriveeMax = tabPID;

                    }

                    asservSpeedDisplay.UpdatePolarSpeedCorrectionGains(robot.pidLin.Kp, robot.pidAng.Kp, robot.pidLin.Ki, robot.pidAng.Ki, robot.pidLin.Kd, robot.pidAng.Kd);
                    asservSpeedDisplay.UpdatePolarSpeedCorrectionLimits(robot.pidLin.erreurProportionelleMax, robot.pidAng.erreurProportionelleMax, robot.pidLin.erreurIntegraleMax, robot.pidAng.erreurIntegraleMax, robot.pidLin.erreurDeriveeMax, robot.pidAng.erreurDeriveeMax);
                    asservSpeedDisplay.UpdatePolarSpeedCommandValues(robot.pidLin.command, robot.pidAng.command);
                    asservSpeedDisplay.UpdatePolarSpeedConsigneValues(robot.pidLin.consigne, robot.pidAng.consigne);
                    asservSpeedDisplay.UpdatePolarSpeedCorrectionValues(robot.pidLin.corr_P, robot.pidAng.corr_P, robot.pidLin.corr_I, robot.pidAng.corr_I, robot.pidLin.corr_D, robot.pidAng.corr_D);
                    asservSpeedDisplay.UpdatePolarSpeedErrorValues(robot.pidLin.erreur, robot.pidAng.erreur);